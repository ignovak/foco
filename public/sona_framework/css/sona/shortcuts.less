// APPLYING GRID
//
// .sgrid(); this mixin would add {margin: 0 auto; width: (defined in .sgrid_setup - first line in layout.less); .clearfix();} and lets you use .col()
// you can apply it to one or several elements on web page
//
// .col(); - gives width property to element and adds padding to left and right sides,
// maximum amount of columns is indicated first line of layout.less, just after width
// in our case maximun amount of colums is 12
// Example: if we have .sgrid_setup(984px (width), 12 (number of colums), 24px (gap)); in layout.less
// and will assign .col(3); to random tag we will get element with {padding-left: 12px; padding-right: 12px; width: 222px;}
// or use @unit*(1-12) eg: @unit*2 width equals .col(2) width +@gap;

// FONT SIZE redefining
//
// if parent tag has base font size
// use .fs(...px); Example .fs(30px);
//
// if parent tag font size was redefined
// use .fs(...px, parent tag font size); Example .fs(18px,30px);
//
// LINE HEIGHT redefining
// use .line(...px); Example: .line(35px); Notice: it would set line-height: 42px; if website vertical rhythm is 21px .line(35px) would be rounded to nearest integer vertical rhythm value.
// use .line_em(...px); if you want to set line-height in "em"; Notice: the same as for .line(...px);
// or use @rhythm variable, its very easy to mantain vertical rhythm using it, you can do whatever math you want to change its value. Example: line-height: @rhythm*2; would change line-height value to 42px if vertical rhythm is 21px.
//
// .type_body(); to fix text resizing of IE6 and IE7


//   USEFULL MIXINS
//
// WRAP
//  .row(); --- { .util_clearfix(); width: 100%;} wraps columns
//
// EQUAL COLUMS
//  .equal_col_wrap(); --- { overflow: hidden; display:block; position:relative;}
//  .equal_col() ---  { padding-bottom:32767px; margin-bottom:-32767px;}
//  .equal_col_remove() --- { padding-bottom: 0; margin-bottom: 0;}
//
// SHIFT, PREPEND, APPEND
// .shift_right(@count) --- {left: @count * @width / @columns; position:relative;}, .shitf_left(@count)...
// Shifts column to `@count` units use it in pair with floats to swap columns
// .unshift() --- {left: 0; right: 0;} remove shift. Use it in mobile styles to remove shifts
// .prepend(@count, @fix: 0px) --- {margin-left: @count * @width / @columns + @fix;} margin left in columns
// .append(@count, @fix: 0px) --- {margin-fight: @count * @width / @columns + @fix;} margin right in columns
// .unprepend() --- {margin-left: 0;} .unappend() {margin-right: 0;}
//
// PULL, PUSH, RIZE, SINC
// .pull(@step, @fix: 0px) --- { margin-top: @step * @rhythm + @fix;}
// .push(@step, @fix: 0px) --- { margin-bottom: @step * @rhythm + @fix;}
// .rise(@step, @fix: 0px) --- { margin-top: - @step * @rhythm + @fix;}
// .sink(@step, @fix: 0px) --- { margin-bottom: - @step * @rhythm + @fix;}

// COLUMNS FLOAT
// .left() --- {float: left;} floats colunt left
// .right() --- {margin-left: -5px; float: right;} floats colunt right

// HERE WE DEFINE SOME MORE USEFULL MIXINS:

//LAYOUT MIXINS
.border_box() { box-sizing: border-box;}
.fl() { float: left;}
.fr() { float: right;}

// RESET MIXIN
.list_reset() { margin: 0; padding: 0;
  li { list-style: none;}
}

// DESIGN MIXINS

// .opacity(@opacity) makes element opaque adds ms-filter

// Triangle mixin: if you want to change default values of triangel figures type for example: .triangle_right(#444, 10px, 5px) where #444—color change, 10px—changes colored side of triange, 5px—change transparent sides size;
.triangle_right_mixin(@color: @triangle_color, @_triangle_colored_size: @triangle_colored_size, @_triangle_trans_size: @triangle_trans_size) { // if you type .triangle_right in your stylesheet_or_layout.less file it would take color from @triangle_color defined in layout.less
    border-bottom: @_triangle_trans_size solid transparent;
    border-top: @_triangle_trans_size solid transparent;
    border-left: @_triangle_colored_size solid @color; //you can change its color in layout.less
    display: inline-block;
    vertical-align: 8%;
    padding-right: 4px;
    .size(0,0)
}
.triangle_left_mixin(@color: @triangle_color, @_triangle_colored_size: @triangle_colored_size, @_triangle_trans_size: @triangle_trans_size){
    border-top: @triangle_trans_size solid transparent;
    border-bottom: @triangle_trans_size solid transparent;
    border-right: @triangle_colored_size solid @color;
    display: inline-block;
    vertical-align: 8%;
    padding-left: 4px;
    .size(0,0)
}

.triangle_up_mixin(@color: @triangle_color, @_triangle_colored_size: @triangle_colored_size, @_triangle_trans_size: @triangle_trans_size) {
    border-right: @triangle_trans_size solid transparent;
    border-left: @triangle_trans_size solid transparent;
    border-bottom: @triangle_colored_size solid @color;
    .size(0,0);
}

.triangle_down_mixin(@color: @triangle_color, @_triangle_colored_size: @triangle_colored_size, @_triangle_trans_size: @triangle_trans_size) {
    border-right: @triangle_trans_size solid transparent;
    border-left: @triangle_trans_size solid transparent;
    border-top:  @triangle_colored_size solid @color;
    .size(0,0);
}
@triangle_color: #666;
@triangle_colored_size: 12px;
@triangle_trans_size: 6px;

.triangle_right {
  .triangle_right_mixin();
}

.triangle_left {
  .triangle_left_mixin();
}

.triangle_up {
  .triangle_up_mixin();
}

.triangle_down {
  .triangle_down_mixin();
}

// DECOR
.light_text_shadow (@opacity:50%){ text-shadow: 0px 1px 0px fadeout(#fff, @opacity);}
.dark_text_shadow (@opacity:50%){ text-shadow: 0px 1px 0px fadeout(#000, @opacity);}

// /DECOR

// LATEST MIXINS
// SIZING
.size(@height: 5px, @width: 5px) {
  height: @height;
  width: @width;
}
.square(@size: 5px) {
  .size(@size, @size);
}

// FONT FALLBACK
.sans_family() {
  font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
}

.serif_family() {
  font-family: "Georgia", Times New Roman, Times, serif;
}

// BUTTONS
@button_color: #B5CDFC;
@button_hover: #056012;

.button_mixin(@_button_color: @button_color, @_button_hover: @button_hover) {
//  background-color: darken(@_button_color, 10%);
  background-image: linear-gradient(top, @_button_color, darken(@_button_color, 2%) 10%, darken(@_button_color, 7%) 90%, darken(@_button_color, 13%));
  cursor: pointer;
  display: inline-block;
  padding: 5px 14px 6px;
  text-shadow: 0 1px 1px rgba(255,255,255,.75);
  text-decoration: none;
  color: #333;
  border: 1px solid darken(@_button_color, 27%);
  border-top-color: darken(@_button_color, 20%);
  border-bottom-color: darken(@_button_color, 33%);
  border-radius: 4px;
  @button_shadow: inset 0 1px 0 rgba(255,255,255,.2), 0 1px 2px rgba(0,0,0,.1);
  box-shadow: @button_shadow;

  &:hover {
    color: @_button_hover;
    border-color: lighten(@_button_hover, 10%);
    border-top-color: lighten(@_button_hover, 15%);
    border-bottom-color: lighten(@_button_hover, 5%);
  }

  // Focus state for keyboard and accessibility
  &:focus {
    outline: 1px dotted #666;
  }

   // Transitions
  transition: all 0.1s linear;

  // Active and Disabled states
  &.active,
  &:active {
    @button_shadow: inset 0 2px 4px rgba(0,0,0,.25), 0 1px 2px rgba(0,0,0,.05);
    box-shadow: @button_shadow;
  }
  &.disabled {
    cursor: default;
    background-image: none;
/*    .reset-filter(); */
    .opacity(65);
    box-shadow: none;
  }
  &[disabled] {
    // disabled pseudo can't be included with .disabled
    // def because IE8 and below will drop it ;_;
    cursor: default;
    background-image: none;
/*    .reset-filter(); */
    .opacity(65);
    box-shadow: none;
  }

  // Button Sizes
  &.big {
    font-size: @base_fs + 5px;
    line-height: @rhythm;
    padding: @rhythm/2 @gap;
//    padding: 9px 14px 9px;
    border-radius: 6px;
  }

  &.medium {
//    line-height: @rhythm*0.4;
    padding: @rhythm/4 @gap/2;
//    padding: 5px 14px 9px;
  }

  &.small {
    padding: 0 @gap/2;
    font-size: @base_fs - 3px;
  }
}
// Super jank hack for removing border-radius from IE9 so we can keep filter gradients on alerts and buttons
:root /*.alert-message*/,
:root .button {
  border-radius: 0 \0;
}

// Help Firefox not be a jerk about adding extra padding to buttons
button.button,
input[type=submit].button {
  &::-moz-focus-inner {
    padding: 0;
    border: 0;
  }
}

.button {
  .button_mixin();
}

.nav_skip_link() {
    /*
     * The skip navigation link will be completely hidden until a user tabs to the
     * link. See http://www.webaim.org/techniques/skipnav/
     */
     a, 
     a:visited {
      position: absolute;
      display: block;
      left: 0;
      top: -500px;
      width: 1px;
      height: 1px;
      overflow: hidden;
      text-align: center;
      background-color: #666;
      color: #fff;
    }

    a:hover,
    a:active,
    a:focus {
      position: static;
      width: 100%;
      height: auto;
      padding: 2px 0 3px 0;
    }
}
